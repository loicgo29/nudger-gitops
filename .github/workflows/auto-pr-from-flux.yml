name: "PR: Flux image updates"

on:
  push:
    branches:
      - flux-imageupdates
  workflow_dispatch:
    inputs:
      head_branch:
        description: "Source branch (default: flux-imageupdates)"
        required: true
        default: flux-imageupdates

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: auto-pr-flux-${{ github.ref || github.event.inputs.head_branch }}
  cancel-in-progress: true

env:
  BASE_BRANCH: main
  HEAD_BRANCH: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.head_branch || github.ref_name }}

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout HEAD branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.HEAD_BRANCH }}
          fetch-depth: 0

      - name: Ensure labels exist (idempotent)
        env: { GH_TOKEN: ${{ github.token }} }
        run: |
          gh label create flux --color FFD700 --description "Flux automation" || gh label edit flux --color FFD700 --description "Flux automation"
          gh label create automated-pr --color 1D76DB --description "Created by automation" || gh label edit automated-pr --color 1D76DB --description "Created by automation"

      - name: Abort if HEAD==BASE or no diff
        run: |
          set -euo pipefail
          echo "HEAD=${HEAD_BRANCH} BASE=${BASE_BRANCH}"
          if [ "${HEAD_BRANCH}" = "${BASE_BRANCH}" ]; then
            echo "HEAD==BASE (you probably ran from main). Exiting."
            exit 0
          fi
          git fetch origin "${BASE_BRANCH}"
          if git diff --quiet "origin/${BASE_BRANCH}..HEAD"; then
            echo "No diff between ${HEAD_BRANCH} and ${BASE_BRANCH}. Exiting."
            exit 0
          fi

      - name: Create or reopen PR
        env: { GH_TOKEN: ${{ github.token }} }
        run: |
          set -euo pipefail
          if gh pr view --head "${HEAD_BRANCH}" --base "${BASE_BRANCH}" >/dev/null 2>&1; then
            state=$(gh pr view --head "${HEAD_BRANCH}" --base "${BASE_BRANCH}" --json state -q .state || echo "")
            if [ "$state" = "CLOSED" ]; then gh pr reopen --head "${HEAD_BRANCH}" --base "${BASE_BRANCH}"; fi
          else
            gh pr create \
              --head "${HEAD_BRANCH}" \
              --base "${BASE

