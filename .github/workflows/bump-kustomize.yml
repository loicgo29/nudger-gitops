name: ðŸ”§ Bump KUSTOMIZE image (manual)
required: true
type: string
image_repo:
description: "Repo d'image publique (ex: ghcr.io/loicgo29/nudger-ui)"
required: true
type: string
image_tag:
description: "Tag (ex: 2025.09.01-a1b2c3d ou v1.2.3)"
required: true
type: string


permissions:
contents: write


jobs:
bump:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v4
- name: Install yq
run: |
sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
sudo chmod +x /usr/local/bin/yq
- name: Patch kustomization.yaml
id: patch
env:
FILE: ${{ inputs.path }}
NAME: ${{ inputs.name }}
REPO: ${{ inputs.image_repo }}
TAG: ${{ inputs.image_tag }}
run: |
set -euo pipefail
test -f "$FILE" || { echo "Fichier introuvable: $FILE"; exit 1; }
# Ensure images[] exists
if ! yq '.images' "$FILE" >/dev/null 2>&1; then yq -i '.images = []' "$FILE"; fi
# Update or insert entry by name
exists=$(yq '.images[] | select(.name == env(NAME)) | length' "$FILE" 2>/dev/null || true)
if [ -n "$exists" ]; then
yq -i '(.images[] | select(.name == env(NAME)).newName) = env(REPO) | (.images[] | select(.name == env(NAME)).newTag) = env(TAG)' "$FILE"
else
yq -i '.images += [{"name": env(NAME), "newName": env(REPO), "newTag": env(TAG)}]' "$FILE"
fi
echo "file=$FILE" >> $GITHUB_OUTPUT
- name: Create PR
uses: peter-evans/create-pull-request@v6
with:
commit-message: "chore(kustomize): ${{ inputs.image_repo }}:${{ inputs.image_tag }} (name=${{ inputs.name }})"
title: "chore(kustomize): bump to ${{ inputs.image_repo }}:${{ inputs.image_tag }} (name=${{ inputs.name }})"
body: "Path: `${{ steps.patch.outputs.file }}`"
branch: chore/kustomize-bump-${{ github.run_id }}
labels: |
auto
kustomize
