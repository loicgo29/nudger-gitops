# Expose /metrics des contr√¥leurs Flux (port 8080)
apiVersion: v1
kind: Service
metadata:
  name: kustomize-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: kustomize-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: kustomize-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: helm-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: helm-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: helm-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: source-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: source-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: source-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: notification-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: notification-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: notification-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: image-reflector-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: image-reflector-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: image-reflector-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: image-automation-controller-metrics
  namespace: flux-system
  labels: { app.kubernetes.io/name: image-automation-controller, app.kubernetes.io/part-of: flux, flux-metrics: "true" }
spec:
  selector: { app.kubernetes.io/name: image-automation-controller }
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080

---
# ServiceMonitor pour Prometheus (kube-prometheus-stack)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fluxcd-metrics
  namespace: flux-system
  labels:
    release: kube-prometheus-stack           # <- IMPORTANT: correspond au release name de ton Prometheus
spec:
  namespaceSelector:
    matchNames: [ "flux-system" ]
  selector:
    matchLabels:
      flux-metrics: "true"
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
