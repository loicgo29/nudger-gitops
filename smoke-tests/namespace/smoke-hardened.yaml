apiVersion: v1
kind: Pod
metadata:
  name: smoke-hardened
  namespace: open4goods-prod  # ⇦ PSA=restricted ici
  labels:
    app: smoke
    env: prod
    # ⇩ Déclenche la règle Kyverno "auto-harden" (mutate) :
    security.nudger/auto-harden: "true"
spec:
  # Bonne pratique + durcissement (Kyverno le ferait aussi) :
  automountServiceAccountToken: false

  # Contexte pod conforme PSA restricted (Kyverno le poserait aussi)
  securityContext:
    runAsNonRoot: true
    seccompProfile: { type: RuntimeDefault }
    fsGroup: 101  # utile si des fichiers appartiennent au groupe 101 (nginx unprivileged)

  # Volumes temporaires nécessaires quand la racine est RO
  volumes:
    - name: cache
      emptyDir: {}
    - name: run
      emptyDir: {}
    - name: log
      emptyDir: {}
    - name: tmp
      emptyDir: {}

  containers:
    - name: web
      image: nginxinc/nginx-unprivileged:1.27-alpine  # tourne en user 101 par défaut
      ports: [{ containerPort: 8080 }]

      # Contexte conteneur conforme PSA (Kyverno le renforcerait aussi)
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true   # RO sur la racine
        capabilities: { drop: ["ALL"] }

      # Nginx nécessite ces chemins en écriture → on les monte depuis emptyDir
      volumeMounts:
        - { name: cache, mountPath: /var/cache/nginx }
        - { name: run,   mountPath: /var/run }
        - { name: log,   mountPath: /var/log/nginx }
        - { name: tmp,   mountPath: /tmp }

      # Lancement “propre” (pas de daemonize)
      args: ["sh","-lc","exec nginx -g 'daemon off;'"]

      # (facultatif) Probes simples
      readinessProbe:
        httpGet: { path: "/", port: 8080 }
        initialDelaySeconds: 2
        periodSeconds: 5
      livenessProbe:
        httpGet: { path: "/", port: 8080 }
        initialDelaySeconds: 10
        periodSeconds: 10
